---
title: "IMRaD report for Karl"
author: "Alexandra Stephenson"
date: today
format: 
  html:
    self-contained: true
    df-print: tibble
editor_options:
  chunk_output_type: console
execute:
  warning: false
  message: false
  echo: false
bibliography: references.bib
---

# A predictive model of gene expression

-   Y = gene expression
-   X = concentration (numerical), treatment (factor, 2 levels), cell line (factor, 2 levels)
-   grouping = sheet names

```{r}
pacman::p_load(tidyverse, readr)
theme_set(theme_light())
data <- read_csv("data/2023-03-01_gene-data.csv")
data_long <- data %>%
  mutate(CL = `cell line`,
         treat = treatment) %>%
  unite(`cell line`, `treat`, sep = "; ", col = "grouping") %>%
  pivot_longer(cols = 4:14, names_to = "concentration", values_to = "GE") %>%
  filter(GE >= 0) %>%
  mutate(concentration = as.integer(concentration),
         sheet_names = as.factor(sheet_names),
         CL = as.factor(CL),
         treatment = as.factor(treatment),
         grouping = as.factor(grouping))
```

```{r}
pacman::p_load(lme4)
```

```{r}
test1 <- lmer(GE ~ concentration + (1|sheet_names), data = data_long, na.action = na.omit)
summary(test1)
test2 <- lmer(GE ~ concentration + treatment*CL + (1|sheet_names), data = data_long, na.action = na.omit)
summary(test2)
test3 <- lmer(GE ~ concentration*treatment*CL + (1|sheet_names), data = data_long, na.action = na.omit)
summary(test3)
test4 <- lmer(GE ~ concentration*treatment + (1|sheet_names), data = data_long, na.action = na.omit)
summary(test4)
test5 <- lmer(GE ~ concentration*treatment + CL + (1|sheet_names), data = data_long, na.action = na.omit)
summary(test5)
AIC(test1, test2, test3, test4, test5)
BIC(test1, test2, test3, test4, test5)
```

Cell line does not appear (from the EDA plots) to have a large impact on the slope of `GE ~ concentration`, so removing the interaction terms with cell line (lower AIC and BIC may just be due to overfitting). Removing this option leaves `GE ~ concentration + (1|sheet_names)`, `GE ~ concentration*treatment + (1|sheet_names)` and `GE ~ concentration*treatment + CL + (1|sheet_names)` as the possible models. Of these, the last two models have the best AIC and BIC. However, there is not much difference between the AIC and BIC for these two models, so the model with fewer degrees of freedom is chosen: `GE ~ concentration*treatment + (1|sheet_names)`. **CHECK THIS**

# Introduction

# Method

-   R language [@r-2022]
-   tidyverse [@tidyverse]
-   rstatix [@rstatix]
-   ggpubr [@ggpubr]
-   patchwork [@patchwork]
-   showtext [@showtext]
-   ggrepel [@ggrepel]
-   lme4 [@lme4]

# Results

@fig-ge-conc-grouping scatter plot

@fig-ge-cl-boxplot boxplot (cell line)

@fig-ge-treat-boxplot boxplot (treatment)

```{r fig-ge-conc-grouping, fig.cap = "A plot of gene expression as a function of concentration, coloured by cell line (wild-type or cell-type 101) and treatment (placebo or activating factor 42)."}
data_long %>%
  ggplot(aes(x = concentration, y = GE, color = grouping)) +
  geom_point() +
  ylim(0, NA) +
  harrypotter::scale_color_hp_d("Ravenclaw") +
  labs(x = "Concentration (mg/ml)",
       y = "Gene expression",
       color = "Cell Line; Treatment")
```

```{r fig-ge-cl-boxplot, fig.cap = "A boxplot of gene expression for each cell line (wild-type and cell-type 101)."}
data_long %>%
  ggplot(aes(x = CL, y = GE, col = CL)) +
  geom_boxplot() +
  theme(legend.position = 'none') +
  harrypotter::scale_color_hp_d("Ravenclaw") +
  labs(x = "Cell line",
       y = "Gene expression")
```

```{r fig-ge-treat-boxplot, fig.cap = "A boxplot of gene expression for each treatment (placebo and activating factor 42)."}
data_long %>%
  ggplot(aes(x = treatment, y = GE, col = treatment)) +
  geom_boxplot() +
  theme(legend.position = 'none') +
  harrypotter::scale_color_hp_d("Ravenclaw") +
  labs(x = "Treatment",
       y = "Gene expression")
```

# Discussion

# Appendix: Code

```{r ref.label=knitr::all_labels()}
#| eval: false
#| echo: true
```

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
